name: Build
on: 
  push:
  pull_request:
permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install dependencies
        run: sudo apt-get install -y jq

      - name: Get plugin info
        id: getname
        run: |
          echo "NAME=$(cat info.json | jq '.id' | tr -d '"')" >> "$GITHUB_ENV"
          echo "ICON=$(cat info.json | jq '.icon' | tr -d '"')" >> "$GITHUB_ENV"

      - name: Create plugin package
        run: |
          # Create temporary directory for packaging
          mkdir -p plugin_package
          
          # Copy core plugin files
          cp info.json plugin_package/
          cp main.js plugin_package/
          cp "${{ env.ICON }}" plugin_package/
          
          # Copy Python service and dependencies
          cp ocr_service.py plugin_package/
          cp requirements.txt plugin_package/
          
          # Copy setup scripts
          cp setup.sh plugin_package/
          cp setup.bat plugin_package/
          chmod +x plugin_package/setup.sh
          
          # Create the plugin package
          cd plugin_package
          zip -r "../${{ env.NAME }}.potext" .
          cd ..

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.NAME }}
          path: "${{ env.NAME }}.potext"
          if-no-files-found: error

      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: "${{ env.NAME }}.potext"